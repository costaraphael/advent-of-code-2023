# Advent of Code 2023 - Day 01

```elixir
Mix.install([
  {:kino, "~> 0.11.3"}
])
```

## Setup

```elixir
import Kino.Shorts

input =
  read_textarea("Puzzle input",
    monospace: true,
    default: """
    1abc2
    pqr3stu8vwx
    a1b2c3d4e5f
    treb7uchet\
    """
  )
```

<!-- livebook:{"branch_parent_index":0} -->

## Part 1

```elixir
input
|> String.splitter("\n", trim: true)
|> Enum.map(fn line ->
  numbers = for <<char <- line>>, char in ?0..?9, do: <<char>>

  String.to_integer(List.first(numbers) <> List.last(numbers))
end)
|> Enum.sum()
```

<!-- livebook:{"branch_parent_index":0} -->

## Part 2

```elixir
numbers_regex = ~R/(?=(one|two|three|four|five|six|seven|eight|nine|\d))/

translate_number = fn
  "one" -> "1"
  "two" -> "2"
  "three" -> "3"
  "four" -> "4"
  "five" -> "5"
  "six" -> "6"
  "seven" -> "7"
  "eight" -> "8"
  "nine" -> "9"
  number_literal -> number_literal
end

input
|> String.split("\n", trim: true)
|> Enum.map(fn line ->
  matches = Regex.scan(numbers_regex, line)

  [_, first] = List.first(matches)
  [_, last] = List.last(matches)

  String.to_integer(translate_number.(first) <> translate_number.(last))
end)
|> Enum.sum()
```
